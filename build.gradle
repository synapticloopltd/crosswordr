plugins {
	id 'java'
	id 'application'
	id 'eclipse'
	id "maven"
	id "maven-publish"
	id "com.jfrog.bintray" version "1.8.4"
	id 'co.riiid.gradle' version '0.4.2'

	id 'com.github.ben-manes.versions' version '0.23.0'
	id 'com.github.johnrengelman.shadow' version '5.1.0'

	id 'synapticloop.documentr' version '3.0.0'
	id "synapticloop.copyrightr" version "1.3.1"
}

group = 'synapticloop'
archivesBaseName = 'puzzlr'
description = """puzzle-compiler -> PDF"""

version = '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

dependencies {
	implementation 'org.apache.xmlgraphics:xmlgraphics-commons:2.3'
	implementation 'org.apache.xmlgraphics:fop:2.3'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9.1'
	implementation 'commons-io:commons-io:2.6'
	implementation 'org.json:json:20190722'
	implementation 'org.slf4j:slf4j-api:1.7.26'
	implementation 'org.slf4j:slf4j-log4j12:1.7.26'
	implementation 'org.apache.logging.log4j:log4j-core:2.12.0'
	implementation 'org.apache.pdfbox:pdfbox:2.0.16'
	implementation 'org.jsoup:jsoup:1.12.1'

	testImplementation 'junit:junit:4.12'
}

configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
		force 'org.slf4j:slf4j-api:1.7.13',
					'xml-apis:xml-apis:2.0.2',
					'org.apache.xmlgraphics:xmlgraphics-commons:2.3',
					'commons-logging:commons-logging:1.2',
					'commons-io:commons-io:2.6',
					'org.apache.pdfbox:pdfbox:2.0.16',
					'org.apache.pdfbox:fontbox:2.0.16'

		eachDependency {
			DependencyResolveDetails details ->
				if (details.requested.group == 'junit') {
					details.useVersion '4.12'
				}
		}
	}
}


mainClassName = "synapticloop.puzzlr.PuzzlrMain"

jar {
	manifest {
		attributes("Main-Class": "synapticloop.puzzlr.PuzzlrMain", "Implementation-Version": version)
	}
}

/*
 *
 * Publish to bintray
 *
 */


def javaApiUrl = 'http://docs.oracle.com/javase/1.8.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'

tasks.withType(Javadoc) {
	options.links(javaApiUrl, groovyApiUrl)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

publishing {
	publications {
		Synapticloop(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar

			groupId 'synapticloop'
			artifactId 'recipease'

			pom.withXml {
				configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
					asNode().dependencies[0].dependency.find {
						it.artifactId[0].text() == dep.moduleName &&
								it.groupId[0].text() == dep.moduleGroup
					}.scope[0].value = 'compile'
				}
			}
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_PASSWORD')

	publications = [ 'Synapticloop' ]

	publish = true

	pkg {
		repo = 'maven'
		name = 'recipease'
	}
}

 github {
	owner = 'synapticloopltd'
	repo = archivesBaseName
	if(System.getenv('GITHUB_TOKEN')) {
		token = System.getenv('GITHUB_TOKEN')
		}
		tagName = version
		name = version
		assets = [
			'build/libs/' + archivesBaseName + '-' + version + '-all.jar'
	]
}

copyrightr {
	dryRun = false
	copyrightHolder = "Synapticloop"
	includes = [ 
		"src/**/*.java",
		"src/**/*.groovy"
	]

	excludes = [ "**/*.class" ]

	onlyReplaceFirst = true

	yearSeparator = " - "

	failOnMissing = false
}

